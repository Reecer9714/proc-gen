name: Linux

on:
  push:
    branches:
      - main

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        build_type: [Debug, Release, RelWithDebInfo]
        cxx: [g++-12]
        std: [20]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        env:
          cache-name: cache-conan-modules
        with:
          path: |
            ${{ env.CONAN_USER_HOME }}
            ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.build_type }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('cmake/Conan.cmake') }}

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install cmake
          cmake -E make_directory ${{runner.workspace}}/build
          sudo apt install ${{ matrix.cxx }}
          echo "CONAN_PRESET=$(echo ${{matrix.build_type}} | tr "[:upper:]" "[:lower:]")" >> "${GITHUB_ENV}"

      - name: Install conan
        shell: bash
        run: |
          python3 -m pip install conan

      - name: Configure Conan
        run: |
          conan profile detect

      - name: Run Conan Install
        run: |
          conan install $GITHUB_WORKSPACE --build=missing \
            -s build_type=${{ matrix.build_type }} -s compiler.cppstd=${{ matrix.std }}

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        env:
          CXX: ${{ matrix.cxx }}
        run: |
          source ~/.profile
          cmake $GITHUB_WORKSPACE -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                -DCMAKE_CXX_STANDARD=${{matrix.std}} --preset=conan-$CONAN_PRESET

      - name: Build
        shell: bash
        run: cmake --build --preset=conan-$CONAN_PRESET

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{ matrix.build_type }}
